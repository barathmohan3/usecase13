name: Website Login through Cognito

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform (apply/destroy)'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

  pull_request:

permissions:
  id-token: write
  contents: write

jobs:
  provision:
    name: Terraform Setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::650251701672:role/s3-github
          aws-region: us-east-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.5

  init:
    name: Terraform Initiation
    runs-on: ubuntu-latest
    needs: provision

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::650251701672:role/s3-github
          aws-region: us-east-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.5

      - name: Terraform Init
        run: terraform init 
      
      - name: package lambda functions
        run: |
          cd lambda
          zip ../lambda_function.zip lambda_function.py

  Validation:
      if: github.event.inputs.action == 'apply'
      name: Terraform Validation & Formatting
      runs-on: ubuntu-latest
      needs: init
    
      steps:
        - name: Checkout repo
          uses: actions/checkout@v4

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            role-to-assume: arn:aws:iam::650251701672:role/s3-github
            aws-region: us-east-2

        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v3
          with:
            terraform_version: 1.10.5

        - name: Terraform Init
          run: terraform init 

        - name: Terraform format
          run: terraform fmt

        - name: Terraform validate
          run: terraform validate
 
        - name: Run Terraform Tests
          run: terraform test || echo "Terraform test failed but continuing..."

  
  Checkov:
      if: github.event.inputs.action == 'apply'
      name: Checkov Checker and Linting
      runs-on: ubuntu-latest
      needs: Validation 

      steps:
        - name: Checkout repo
          uses: actions/checkout@v4

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            role-to-assume: arn:aws:iam::650251701672:role/s3-github
            aws-region: us-east-2

        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v3
          with:
            terraform_version: 1.10.5

        - name: Terraform Init
          run: terraform init
 
        - name: Install Checkov
          run: |
           python3 -m pip install --upgrade pip
           pip install checkov

        - name: Run Checkov Scan
          run: checkov -d ./ --skip-path .github/* --soft-fail
        
        - name: Install tflint
          run: |
           curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

        - name: Run tflint with custom config
          run: |
           echo "Using custom rules from .tflint.hcl"
           tflint --config=./.tflint.hcl
          continue-on-error: true 
  
  OPA:
    if: github.event.inputs.action == 'apply'
    name: OPA Conftest Policy Check
    runs-on: ubuntu-latest
    needs: Checkov

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::650251701672:role/s3-github
          aws-region: us-east-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.5

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan (save)
        run: terraform plan -out=tfplan.binary

      - name: Convert plan to JSON
        run: terraform show -json tfplan.binary > tfplan.json

      - name: Install conftest
        run: |
          wget https://github.com/open-policy-agent/conftest/releases/download/v0.52.0/conftest_0.52.0_Linux_x86_64.tar.gz
          tar -xzf conftest_0.52.0_Linux_x86_64.tar.gz
          sudo mv conftest /usr/local/bin/

      - name: Run OPA Policy Check
        run: conftest test tfplan.json -p policy/ || echo "Conftest failed, but continuing..."

  Plan:
      if: github.event.inputs.action == 'apply'
      name: Terraform Plan & ReadMe Generator
      runs-on: ubuntu-latest
      needs: Checkov  

      steps:
        - name: Checkout repo
          uses: actions/checkout@v4

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            role-to-assume: arn:aws:iam::650251701672:role/s3-github
            aws-region: us-east-2

        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v3
          with:
            terraform_version: 1.10.5

        - name: Terraform Init
          run: terraform init
 
        - name: Terraform plan
          run: terraform plan

        - name: Install terraform-docs
          run: |
           curl -sSLo terraform-docs.tar.gz https://terraform-docs.io/dl/v0.20.0/terraform-docs-v0.20.0-linux-amd64.tar.gz
           tar -xzf terraform-docs.tar.gz
           chmod +x terraform-docs
           sudo mv terraform-docs /usr/local/bin/


        - name: Generate Terraform Docs
          run: |
           terraform-docs markdown table . > README.md

        - name: Commit Terraform Docs
          run: |
           git config --global user.name "github-actions"
           git config --global user.email "github-actions@github.com"
           git pull --rebase origin main || true
           git add README.md
           git commit -m "Update Terraform docs [skip ci]" || echo "No changes to commit"
           git push
      #  Terraform Docs Integration Ends Here
        - name: Terraform plan
          run: terraform plan
  
  Final:
      name: Run Terraform
      runs-on: ubuntu-latest 

      steps:
        - name: Checkout repo
          uses: actions/checkout@v4

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            role-to-assume: arn:aws:iam::650251701672:role/s3-github
            aws-region: us-east-2

        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v3
          with:
            terraform_version: 1.10.5

        - name: Terraform Init
          run: terraform init

        - name: Terraform "${{ github.event.inputs.action }}"
          run: |
           if [[ "${{ github.event.inputs.action }}" == "destroy" ]]; then
            terraform destroy -auto-approve
           else
            terraform apply -auto-approve
           fi

  docs:
    name: Render Terraform Docs
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Render terraform docs and push changes back to PR
        uses: terraform-docs/gh-actions@v1.1.0
        with:
          working-dir: .
          output-file: README.md
          output-method: inject
          git-push: true
